[metadata]
name = senlin
summary = OpenStack Clustering
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/senlin/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5

[files]
packages =
    senlin

[entry_points]
console_scripts =
    senlin-api = senlin.cmd.api:main
    senlin-engine = senlin.cmd.engine:main
    senlin-manage = senlin.cmd.manage:main

oslo.config.opts =
    senlin.config = senlin.common.config:list_opts

senlin.profiles =
    os.heat.stack-1.0 = senlin.profiles.os.heat.stack:StackProfile
    os.nova.server-1.0 = senlin.profiles.os.nova.server:ServerProfile
    container.dockerinc.docker-1.0 = senlin.profiles.container.docker:DockerProfile

senlin.policies =
    senlin.policy.deletion-1.0 = senlin.policies.deletion_policy:DeletionPolicy
    senlin.policy.scaling-1.0 = senlin.policies.scaling_policy:ScalingPolicy
    senlin.policy.health-1.0 = senlin.policies.health_policy:HealthPolicy
    senlin.policy.loadbalance-1.0 = senlin.policies.lb_policy:LoadBalancingPolicy
    senlin.policy.region_placement-1.0 = senlin.policies.region_placement:RegionPlacementPolicy
    senlin.policy.zone_placement-1.0 = senlin.policies.zone_placement:ZonePlacementPolicy
    senlin.policy.affinity-1.0 = senlin.policies.affinity_policy:AffinityPolicy

senlin.drivers =
    openstack = senlin.drivers.openstack
    openstack_test = senlin.tests.drivers.openstack

tempest.test_plugins =
    senlin_tests = senlin.tests.tempest.plugin:SenlinTempestPlugin

[global]
setup-hooks =
    pbr.hooks.setup_hook

[compile_catalog]
directory = senlin/locale
domain = senlin

[update_catalog]
domain = senlin
output_dir = senlin/locale
input_file = senlin/locale/senlin.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = senlin/locale/senlin.pot

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source
